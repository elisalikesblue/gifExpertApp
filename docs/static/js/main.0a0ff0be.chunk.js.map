{"version":3,"sources":["components/AddCategory.js","Helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SApBc,SAACP,GACvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCPlBK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGSI,MAAOF,GAHhB,cAGTG,EAHS,gBAIMA,EAAUC,OAJhB,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1CN,QAAQC,IAAIW,GAdG,kBAgBRA,GAhBQ,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OAFAN,QAAQC,IAAIe,EAAOV,GAGf,sBAAKc,UAAU,uCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCNHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0BhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEHxB,EAAUC,GACTwB,MAAM,SAAAC,GAIC7B,QAAQC,IAAI4B,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAM1B,CAACpB,IAEGqB,EDtBwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACA,qCACI,qBAAIJ,UAAU,kCAAd,cAAmDhB,EAAnD,OAECoB,GAAY,mBAAGJ,UAAY,iCAAf,qBACb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZhBgB,EAAe,WAIxB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OAEI,eAAC,WAAD,WAEI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ6C,EAAWnB,KAAK,SAACT,EAAU6B,GACvB,OAAO,cAAC,EAAD,CAEH7B,SAAYA,GADLA,YCvBnC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0a0ff0be.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 )\r\n        {\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }  \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=20&api_key=6blAOp4yE8CDe8jjHI28mS1UkiKjDdGZ`\r\n        const respuesta = await fetch( url );\r\n        const {data} = await respuesta.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        console.log(gifs);\r\n    \r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    console.log(title, url);\r\n\r\n    return (\r\n        <div className=\"card animate_animated animate_fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect}  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n    <>\r\n        <h3 className=\"animate_animated animate_fadeIn\"> { category } </h3>\r\n\r\n        {loading &&  <p className = \"animate_animated animate_flash\" >loading</p> }\r\n        <div className=\"card-grid\">\r\n            {\r\n            images.map( img => (\r\n                <GifGridItem \r\n                    key={img.id}\r\n                    {...img}\r\n                />\r\n            ))\r\n            }\r\n        </div>\r\n        \r\n\r\n    </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../Helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect( ()=> {\r\n\r\n            getGifs(  category )\r\n            .then( imgs => {\r\n\r\n\r\n\r\n                    console.log(imgs)\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    });\r\n                \r\n\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","\r\nimport React, { Fragment } from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = ( ) => {\r\n\r\n    //const categoires = ['One Punch', 'Samurai X', 'Naruto']\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    // const handleAdd = (e) => {\r\n    //     setCategories ( cats => [...cats, 'OtroAnime'] );\r\n    // }\r\n\r\n    return(\r\n\r\n        <Fragment>\r\n\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category, i) => {\r\n                        return <GifGrid \r\n                            key = {category}\r\n                            category = {category} \r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>\r\n        \r\n    )\r\n\r\n} \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}